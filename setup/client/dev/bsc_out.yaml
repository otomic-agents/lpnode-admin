apiVersion: v1
kind: Service
metadata:
  name: chain-client-evm-bsc-server-9006
  namespace: "{{.Deployment.Namespace}}"
spec:
  selector:
    app: chain-client-evm-bsc-9006
  type: ClusterIP
  ports:
    - protocol: TCP
      name: chain-client-evm-bsc-api-9006
      port: 9100
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chain-client-evm-bsc-9006
  namespace: "{{.Deployment.Namespace}}"
  labels:
    app: chain-client-evm-bsc-9006
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chain-client-evm-bsc-9006
  template:
    metadata:
      labels:
        app: chain-client-evm-bsc-9006
    spec:
      containers:
        # Message producer container
        - name: message-producer
          image: "{{.Deployment.Image}}"
          command: ["node"]
          args: ["dist/message-producer"]
          ports:
            - containerPort: 3001
          env:
            - name: "STATUS_KEY"
              value: "chain-client-status-report-{{.Deployment.Name}}"
            - name: CHAIN_TYPE
              value: "evm"
            {{range .Deployment.CustomEnv}}
            - name: "{{.Key}}"
              value: "{{.Value}}"
            {{end}}
            - name: REDIS_PASSWORD
              value: "{{.Deployment.RedisPass}}"
            - name: REDIS_HOST
              value: "{{.Deployment.RedisHost}}"
            - name: REDIS_PORT
              value: "{{.Deployment.RedisPort}}"
            - name: SYSTEM_CHAIN_ID
              value: "9006"
            - name: CHAIN_ID
              value: "97"
            - name: MESSAGE_PRODUCER_PORT
              value: "3001"
            - name: MONGODB_HOST
              value: "{{.Deployment.MongodbHost}}"
            - name: MONGODB_ACCOUNT
              value: "{{.Deployment.MongodbAccount}}"
            - name: MONGODB_PASSWORD
              value: "{{.Deployment.MongodbPass}}"
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_DBNAME_LP_STORE
              value: "{{.Deployment.MongodbDbnameLpStore}}"
            - name: MONGODB_AUTH_SOURCE
              value: "{{.Deployment.MongodbDbnameLpStore}}"
          resources:
            requests:
              cpu: 1m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 800Mi

        # Monitor container
        - name: monitor
          image: "{{.Deployment.Image}}"
          command: ["node"]
          args: ["dist/monitor"]
          ports:
            - containerPort: 3002
          env:
            - name: "STATUS_KEY"
              value: "chain-client-status-report-{{.Deployment.Name}}"
            - name: CHAIN_TYPE
              value: "evm"
            {{range .Deployment.CustomEnv}}
            - name: "{{.Key}}"
              value: "{{.Value}}"
            {{end}}
            - name: MONITOR_NAME
              value: chain-client-evm-bsc-9006-monitor
            - name: LOGGER_LEVEL
              value: "debug"
            - name: SYSTEM_CHAIN_ID
              value: "9006"
            - name: CHAIN_ID
              value: "97"
            - name: CONTRACT_ADDRESS
              value: "0xcb24e8aEDB15981F4C088214722D8E3809e817eB"
            - name: START_BLOCK
              value: "{{ if .Deployment.StartBlock }}{{.Deployment.StartBlock}}{{ else }}24345141{{ end }}"
            - name: RPCS
              value: "{{ if .Deployment.RpcUrl }}{{.Deployment.RpcUrl}}{{ else }}https://blockchain2.byte-trade.com:31267/bsc-archive-testnet{{ end }}"
            - name: MONGODB_HOST
              value: "{{.Deployment.MongodbHost}}"
            - name: MONGODB_ACCOUNT
              value: "{{.Deployment.MongodbAccount}}"
            - name: MONGODB_PASSWORD
              value: "{{.Deployment.MongodbPass}}"
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_DBNAME_LP_STORE
              value: "{{.Deployment.MongodbDbnameLpStore}}"
            - name: MONGODB_AUTH_SOURCE
              value: "{{.Deployment.MongodbDbnameLpStore}}"
          resources:
            requests:
              cpu: 1m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 800Mi

        # Public service container
        - name: public-service
          image: "{{.Deployment.Image}}"
          command: ["node"]
          args: ["dist/public-service"]
          ports:
            - containerPort: 3003
          env:
            - name: "STATUS_KEY"
              value: "chain-client-status-report-{{.Deployment.Name}}"
            - name: CHAIN_TYPE
              value: "evm"
            {{range .Deployment.CustomEnv}}
            - name: "{{.Key}}"
              value: "{{.Value}}"
            {{end}}
            - name: PUBLIC_SERVICE_PORT
              value: "3003"
            - name: SYSTEM_CHAIN_ID
              value: "9006"
            - name: CHAIN_ID
              value: "97"
            - name: RPCS
              value: "{{ if .Deployment.RpcUrl }}{{.Deployment.RpcUrl}}{{ else }}https://blockchain2.byte-trade.com:31267/bsc-archive-testnet{{ end }}"
            - name: MONGODB_HOST
              value: "{{.Deployment.MongodbHost}}"
            - name: MONGODB_ACCOUNT
              value: "{{.Deployment.MongodbAccount}}"
            - name: MONGODB_PASSWORD
              value: "{{.Deployment.MongodbPass}}"
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_DBNAME_LP_STORE
              value: "{{.Deployment.MongodbDbnameLpStore}}"
            - name: MONGODB_AUTH_SOURCE
              value: "{{.Deployment.MongodbDbnameLpStore}}"
            - name: OS_API_KEY
              value: "{{.Deployment.OsApiKey}}"
            - name: OS_API_SECRET
              value: "{{.Deployment.OsApiSecret}}"
            - name: OS_SYSTEM_SERVER
              value: "{{.Deployment.OsSystemServer}}"
          resources:
            requests:
              cpu: 1m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 800Mi

        # Sender container
        - name: sender
          image: "{{.Deployment.Image}}"
          command: ["node"]
          args: ["dist/sender"]
          ports:
            - containerPort: 3004
          env:
            - name: "STATUS_KEY"
              value: "chain-client-status-report-{{.Deployment.Name}}"
            - name: CHAIN_TYPE
              value: "evm"
            {{range .Deployment.CustomEnv}}
            - name: "{{.Key}}"
              value: "{{.Value}}"
            {{end}}
            - name: SENDER_SERVICE_PORT
              value: "3004"
            - name: SYSTEM_CHAIN_ID
              value: "9006"
            - name: CHAIN_ID
              value: "97"
            - name: MONGODB_HOST
              value: "{{.Deployment.MongodbHost}}"
            - name: MONGODB_ACCOUNT
              value: "{{.Deployment.MongodbAccount}}"
            - name: MONGODB_PASSWORD
              value: "{{.Deployment.MongodbPass}}"
            - name: MONGODB_PORT
              value: "27017"
            - name: MONGODB_DBNAME_LP_STORE
              value: "{{.Deployment.MongodbDbnameLpStore}}"
            - name: MONGODB_AUTH_SOURCE
              value: "{{.Deployment.MongodbDbnameLpStore}}"
            - name: CONTRACT_ADDRESS
              value: "0xcb24e8aEDB15981F4C088214722D8E3809e817eB"
            - name: SENDER_RPC_URL
              value: "https://bsc-dataseed.binance.org"
          resources:
            requests:
              cpu: 1m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 800Mi
        # Nginx proxy container
        - name: nginx-proxy
          image: nginx:latest
          ports:
            - containerPort: 80
          env:
            - name: NGINX_WORKER_PROCESSES
              value: "1"
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
          resources:
            requests:
              cpu: 100m
              memory: 56Mi
            limits:
              cpu: 200m
              memory: 256Mi
      volumes:
        - name: nginx-config
          configMap:
            name: chain-client-evm-bsc-server-9006-nginx-conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chain-client-evm-bsc-server-9006-nginx-conf
  namespace: "{{.Deployment.Namespace}}"
data:
  default.conf: |
    server {
        listen 80;

        # Message Producer endpoints
        location ~ ^/producer/getNextEvent {
            proxy_pass http://localhost:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location ~ ^/producer/getLatestEvent {
            proxy_pass http://localhost:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Public Service endpoints
        location ~ ^/evm-client-[0-9]+/lpnode/get_wallets {
            proxy_pass http://localhost:3003;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location ~ ^/evm-client-[0-9]+/lpnode/get_wallet_balances {
            proxy_pass http://localhost:3003;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Sender endpoints
        location = /submitTokenTransfer {
            proxy_pass http://localhost:3004;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location ~ "/queryJobStatus/[a-f0-9]+" {
            proxy_pass http://localhost:3004;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Sender lpnode endpoints
        location ~ ^/evm-client-[0-9]+/lpnode/(transfer_in|confirm|refund|sign_message_712|single_chain/sign_message_712|single_swap/confirm_swap) {
            proxy_pass http://localhost:3004;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Sender relay endpoints
        location ~ ^/evm-client-[0-9]+/relay/(get_hashlock|get_system_fee|get_signer_from_eip712) {
            proxy_pass http://localhost:3004;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Sender relay behalf endpoints
        location ~ ^/evm-client-[0-9]+/relay/behalf/(confirm_out|confirm_in|refund_out|refund_in) {
            proxy_pass http://localhost:3004;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Default fallback route
        location / {
            return 404;
        }
    }