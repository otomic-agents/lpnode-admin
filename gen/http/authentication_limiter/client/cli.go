// Code generated by goa v3.11.0, DO NOT EDIT.
//
// authenticationLimiter HTTP client CLI support package
//
// Command:
// $ goa gen admin-panel/design

package client

import (
	authenticationlimiter "admin-panel/gen/authentication_limiter"
	"encoding/json"
	"fmt"
)

// BuildSetAuthenticationLimiterPayload builds the payload for the
// authenticationLimiter setAuthenticationLimiter endpoint from CLI flags.
func BuildSetAuthenticationLimiterPayload(authenticationLimiterSetAuthenticationLimiterBody string) (*authenticationlimiter.SetAuthenticationLimiterPayload, error) {
	var err error
	var body SetAuthenticationLimiterRequestBody
	{
		err = json.Unmarshal([]byte(authenticationLimiterSetAuthenticationLimiterBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"authenticationLimiter\": \"Non eum autem et.\"\n   }'")
		}
	}
	v := &authenticationlimiter.SetAuthenticationLimiterPayload{
		AuthenticationLimiter: body.AuthenticationLimiter,
	}

	return v, nil
}
