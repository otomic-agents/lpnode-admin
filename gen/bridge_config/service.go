// Code generated by goa v3.11.0, DO NOT EDIT.
//
// bridgeConfig service
//
// Command:
// $ goa gen admin-panel/design

package bridgeconfig

import (
	"context"
)

// Service is the bridgeConfig service interface.
type Service interface {
	// used to create cross-chain config
	BridgeCreate(context.Context, *BridgeItem) (res *BridgeCreateResult, err error)
	// BridgeList implements bridgeList.
	BridgeList(context.Context) (res *BridgeListResult, err error)
	// BridgeDelete implements bridgeDelete.
	BridgeDelete(context.Context, *DeleteBridgeFilter) (res *BridgeDeleteResult, err error)
	// BridgeTest implements bridgeTest.
	BridgeTest(context.Context, *BridgeTestPayload) (res *BridgeTestResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "bridgeConfig"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"bridgeCreate", "bridgeList", "bridgeDelete", "bridgeTest"}

// BridgeCreateResult is the result type of the bridgeConfig service
// bridgeCreate method.
type BridgeCreateResult struct {
	Code *int64
	// result
	Result  *int64
	Message *string
}

// BridgeDeleteResult is the result type of the bridgeConfig service
// bridgeDelete method.
type BridgeDeleteResult struct {
	Code *int64
	// result
	Result  *int64
	Message *string
}

// BridgeItem is the payload type of the bridgeConfig service bridgeCreate
// method.
type BridgeItem struct {
	// bridge name ****
	BridgeName string
	// mongodb primary key, from basedata
	SrcChainID string
	// mongodb primary key, from basedata
	DstChainID string
	// mongodb primary key, from tokenlist
	SrcTokenID string
	// mongodb primary key, from tokenlist
	DstTokenID string
	// mongodb primary key, from walletlist
	WalletID string
	// mongodb primary key, from walletlist
	SrcWalletID string
	// amm name at install
	AmmName string
	// relay api key
	RelayAPIKey string
	// relayUri
	RelayURI      string
	EnableHedge   bool
	EnableLimiter bool
}

// BridgeListResult is the result type of the bridgeConfig service bridgeList
// method.
type BridgeListResult struct {
	Code *int64
	// chain list
	Result  []*ListBridgeItem
	Message *string
}

// BridgeTestPayload is the payload type of the bridgeConfig service bridgeTest
// method.
type BridgeTestPayload struct {
	ID *string
}

// BridgeTestResult is the result type of the bridgeConfig service bridgeTest
// method.
type BridgeTestResult struct {
	Code *int64
}

// DeleteBridgeFilter is the payload type of the bridgeConfig service
// bridgeDelete method.
type DeleteBridgeFilter struct {
	// mongodb primary key
	ID string
}

type ListBridgeItem struct {
	ID                *string
	DstChainID        *string
	DstTokenID        *string
	SrcChainID        *string
	SrcTokenID        *string
	AmmName           *string
	BridgeName        *string
	DstChainRawID     *int64
	DstClientURI      *string
	DstToken          *string
	LpReceiverAddress *string
	MsmqName          *string
	SrcChainRawID     *int64
	SrcToken          *string
	WalletName        *string
	WalletID          *string
	EnableHedge       *bool
	// Source chain token balance
	SrcTokenBalance string
	// Destination chain token balance
	DstTokenBalance string
	// Source token decimals
	SrcTokenDecimals int64
	// Destination token decimals
	DstTokenDecimals int64
}
