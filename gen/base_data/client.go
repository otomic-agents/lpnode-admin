// Code generated by goa v3.11.0, DO NOT EDIT.
//
// baseData client
//
// Command:
// $ goa gen admin-panel/design

package basedata

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "baseData" service client.
type Client struct {
	ChainDataListEndpoint      goa.Endpoint
	GetLpInfoEndpoint          goa.Endpoint
	RunTimeEnvEndpoint         goa.Endpoint
	GetWalletAndTokensEndpoint goa.Endpoint
}

// NewClient initializes a "baseData" service client given the endpoints.
func NewClient(chainDataList, getLpInfo, runTimeEnv, getWalletAndTokens goa.Endpoint) *Client {
	return &Client{
		ChainDataListEndpoint:      chainDataList,
		GetLpInfoEndpoint:          getLpInfo,
		RunTimeEnvEndpoint:         runTimeEnv,
		GetWalletAndTokensEndpoint: getWalletAndTokens,
	}
}

// ChainDataList calls the "chainDataList" endpoint of the "baseData" service.
func (c *Client) ChainDataList(ctx context.Context) (res *ChainDataListResult, err error) {
	var ires interface{}
	ires, err = c.ChainDataListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*ChainDataListResult), nil
}

// GetLpInfo calls the "getLpInfo" endpoint of the "baseData" service.
func (c *Client) GetLpInfo(ctx context.Context) (res *GetLpInfoResult, err error) {
	var ires interface{}
	ires, err = c.GetLpInfoEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*GetLpInfoResult), nil
}

// RunTimeEnv calls the "runTimeEnv" endpoint of the "baseData" service.
func (c *Client) RunTimeEnv(ctx context.Context) (res *RunTimeEnvResult, err error) {
	var ires interface{}
	ires, err = c.RunTimeEnvEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*RunTimeEnvResult), nil
}

// GetWalletAndTokens calls the "getWalletAndTokens" endpoint of the "baseData"
// service.
func (c *Client) GetWalletAndTokens(ctx context.Context, p *GetWalletAndTokensPayload) (res *GetWalletAndTokensResult, err error) {
	var ires interface{}
	ires, err = c.GetWalletAndTokensEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetWalletAndTokensResult), nil
}
